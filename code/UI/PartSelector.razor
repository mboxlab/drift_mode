@using System;
@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Car;
@inherits PanelComponent

<root>

	<div class="container" style="pointer-events: @(MouseVisible ? "all" : "none")">
		<div>

			@{
				if (Part.HasSlider)
				{

					<SliderControl Step="@(1)" style="pointer-events: @(MouseVisible ? "all" : "none")" Value:bind="@Part.Value" Min="@(Part.MinValue)" Max="@Part.MaxValue"></SliderControl>
				}
				int i = 1;
				foreach (Model model in Part.Models)
				{
					<div class="point @(Part.Current == model ? "active" : "")" onclick=@( () => OnClick( model ) )>
						<title>@i</title>
					</div>
					i++;
				}

			}
		</div>
	</div>
</root>

@code
{
	[Property] public Part Part;
	[Property] public InteractiveObject Object;
	private bool MouseVisible = true;
	private String PartName { get => Part.Index.ToString(); }

	private void OnClick(Model model)
	{
		if (Part.Current != model)
		{
			Sound.Play("ui.button.over");
			Part.Dress(model);
			Part.Save();
		}
	}

	protected override void OnUpdate()
	{
		base.OnUpdate();
		if (!Object.IsLooked) GameObject.Destroy();
		if (Part.Models.Count == 0) return;

		int index = Part.Index;
		index -= (int)Input.MouseWheel.y;
		if (Input.Pressed("Left"))
			index--;
		else if (Input.Pressed("Right"))
			index++;


		int end = Part.Models.IndexOf(Part.Models.Last()) + 1;
		index = index % end;
		if (index < 0) index = end + index;

		if (Part.Index != index)
		{
			Sound.Play("ui.button.over");
			Part.Dress(index);
			Part.Save();
		}

	}
	public void OnMouseDrag(bool isDown)
	{
		MouseVisible = !isDown;
	}
	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine(InteractiveCamera.Target, Part.Current, MouseVisible);
}
